package com.android.nutritious.nutritious;import android.graphics.Typeface;import android.support.v7.app.ActionBarActivity;import android.support.v4.app.Fragment;import android.os.Bundle;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.ImageButton;import android.widget.ListView;import android.widget.SearchView;import android.widget.Toast;import com.android.nutritious.nutritious.JSONdata.Item;import java.util.ArrayList;public class FoodFinderActivity extends ActionBarActivity {    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_detail);        if (savedInstanceState == null) {            getSupportFragmentManager().beginTransaction()                    .add(R.id.container_detail, new PlaceholderFragment())                    .commit();        }    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.menu_detail, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    /**     * A placeholder fragment containing a simple view.     */    public static class PlaceholderFragment extends Fragment {        ArrayList<Item> productResults = new ArrayList<Item>();        ArrayList<Item> filteredProductResults = new ArrayList<Item>();        View myFragmentView;        SearchView search;        ImageButton buttonBarcode;        ImageButton buttonAudio;        Typeface type;        ListView searchResults;        String found = "N";        public PlaceholderFragment() {        }        @Override        public View onCreateView(LayoutInflater inflater, ViewGroup container,                                 Bundle savedInstanceState)        {//            View rootView = inflater.inflate(R.layout.fragment_food_finder, container, false);//            return rootView;            //define a typeface for formatting text fields and listview.//            type= Typeface.createFromAsset(getActivity().getAssets(), "fonts/book.TTF");            myFragmentView = inflater.inflate(R.layout.fragment_food_finder, container, false);            search =(SearchView) myFragmentView.findViewById(R.id.searchView1);            search.setIconifiedByDefault(false);            search.setQueryHint("Start typing to search...");            searchResults = (ListView) myFragmentView.findViewById(R.id.searchResultsList);            //this part of the code is to handle the situation when user enters any search criteria, how should the            //application behave?            search.setOnQueryTextFocusChangeListener(new View.OnFocusChangeListener()            {                @Override                public void onFocusChange(View v, boolean hasFocus) {//                    Toast.makeText(getActivity(), String.valueOf(hasFocus), Toast.LENGTH_SHORT).show();                }            });            search.setOnQueryTextListener(new SearchView.OnQueryTextListener()            {                @Override                public boolean onQueryTextSubmit(String query) {                    return false;                }                @Override                public boolean onQueryTextChange(String newText) {                    if (newText.length() > 3)                    {                        searchResults.setVisibility(myFragmentView.VISIBLE);//                        myAsyncTask m= (myAsyncTask) new myAsyncTask().execute(newText);                    }                    else                    {                        searchResults.setVisibility(myFragmentView.INVISIBLE);                    }                    return false;                }            });            return myFragmentView;        }    }}